project(FreeXAcmiParse)

file(GLOB SPLASHSCREEN_UTILS_INCLUDE_FILES *.h)
file(GLOB SPLASHSCREEN_UTILS_SOURCE_FILES *.cpp)
file(GLOB SPLASHSCREEN_UTILS_QRC_FILES *.qrc)
file(GLOB SPLASHSCREEN_UTILS_FORM_FILES *.ui)


ADD_DEFINITIONS( -D _USE_MATH_DEFINES)

# Files which should be processed by Qts moc
set(LIB_MOC_HDRS
	ACMIDataParse.h
	acmiparse.h
	FlyEventParse.h
)

IF(Qt5Widgets_FOUND)
	#moc
    SET(LIB_MOC_SRCS)
    FOREACH( LIB_MOC_HDR ${LIB_MOC_HDRS} )
        GET_FILENAME_COMPONENT( LIB_MOC_HDR_ABS ${LIB_MOC_HDR} ABSOLUTE )
        QT5_WRAP_CPP( LIB_MOC_SRC ${LIB_MOC_HDR} OPTIONS "-f${LIB_MOC_HDR_ABS}" )
        LIST( APPEND LIB_MOC_SRCS ${LIB_MOC_SRC} )
    ENDFOREACH()
	#ui
	SET(LIB_UI_SRCS)
	FOREACH( LIB_UI ${SPLASHSCREEN_UTILS_FORM_FILES} )
		 QT5_WRAP_UI( LIB_UI_SRC ${LIB_UI} )
		 LIST( APPEND LIB_UI_SRCS ${LIB_UI_SRC} )
	ENDFOREACH()
	#qrc
	QT5_ADD_RESOURCES(LIB_QRC_SRCS ${SPLASHSCREEN_UTILS_QRC_FILES})
ELSE()
	FIND_PACKAGE(Qt4)
    INCLUDE( ${QT_USE_FILE} )
	#moc
    QT4_WRAP_CPP( LIB_MOC_SRCS ${LIB_MOC_HDRS} OPTIONS "-f" )
	#ui
	QT4_WRAP_UI( LIB_UI_SRCS ${SPLASHSCREEN_UTILS_FORM_FILES} )
	#qrc
	QT4_ADD_RESOURCES(LIB_QRC_SRCS ${SPLASHSCREEN_UTILS_QRC_FILES})
ENDIF()

add_executable(
	${PROJECT_NAME} WIN32
	${SPLASHSCREEN_UTILS_INCLUDE_FILES}
	${SPLASHSCREEN_UTILS_SOURCE_FILES}
	${SPLASHSCREEN_UTILS_FORM_FILES}
	${SPLASHSCREEN_UTILS_QRC_FILES}
	${LIB_MOC_HDRS}
	${LIB_MOC_SRCS}
	${LIB_UI_SRCS}
	${LIB_QRC_SRCS}
)

if (Qt5Widgets_FOUND)
	target_link_libraries(
		${PROJECT_NAME}
        Qt5::Widgets
		Qt5::Network
		Qt5::Xml
	) 
else()
    target_link_libraries(
        ${PROJECT_NAME}
        ${QT_LIBRARIES}
	)
endif()

INSTALL(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin )
SET_PROPERTY(TARGET ${OUT_NAME} PROPERTY DEBUG_POSTFIX d)

